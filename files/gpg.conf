#
# This is an implementation of the Riseup OpenPGP Best Practices
# https://help.riseup.net/en/security/message-security/openpgp/best-practices
#


#-----------------------------
# default key
#-----------------------------

# The default key to sign with. If this option is not used, the default key is
# the first key found in the secret keyring

#default-key 0xD8692123C4065DEA5E0F3AB5249B39D24F25E3B6


#-----------------------------
# behavior
#-----------------------------

# Suppress the initial copyright message
no-greeting

# Disable inclusion of the version string in ASCII armored output
no-emit-version

# Disable comment string in clear text signatures and ASCII armored messages
no-comments

# Refuse to run if GnuPG cannot get secure memory
require-secmem

# Long keyids are more collision-resistant than short keyids
keyid-format 0xlong

# List all keys along with their fingerprints
with-fingerprint

# Do not merge primary user ID and primary key in --with-colon
# listing mode and print all timestamps as seconds since
# 1970-01-01
fixed-list-mode

# Show usage information for keys and subkeys in the standard key listing
list-options show-usage

# Show policy URLs in the --list-sigs or --check-sigs listings
list-options show-policy-urls

# Show all signature notations in the -list-sigs or --check-sigs listings
list-options show-notations

# Show any preferred keyserver URL in the --list-sigs or --check-sigs listings
list-options show-keyserver-urls

# Display the calculated validity of user IDs during key listings
list-options show-uid-validity

# Show revoked and expired user IDs in key listings
list-options show-unusable-uids

# Show revoked and expired subkeys in key listings
list-options show-unusable-subkeys

# Show signature expiration dates (if any) during --list-sigs or --check-sigs listings
list-options show-sig-expire

# Display any photo IDs present on the key that issued the signature
verify-options show-photos

# Show policy URLs in the signature being verified
verify-options show-policy-urls

# Show all signature notations in the signature being verified
verify-options show-notations

# Show any preferred keyserver URL in the signature being verified
verify-options show-keyserver-urls

# Display the calculated validity of the user IDs on the key that issued the signature
verify-options show-uid-validity

# Show revoked and expired user IDs during signature verification
verify-options show-unusable-uids

# Enable PKA lookups to verify sender addresses
verify-options pka-lookups

#-----------------------------
# keyserver
#-----------------------------

# Locate a key using DNS CERT, as specified in RFC4398
auto-key-locate cert

# Locate a key using DNS PKA
auto-key-locate pka

# Locate  a  key  using whatever keyserver is defined using the --keyserver option
auto-key-locate keyserver

# Use name as your keyserver
keyserver hkps://hkps.pool.sks-keyservers.net
# keyserver http://pool.sks-keyservers.net

# Automatically fetch keys as needed from the keyserver when verifying
# signatures or when importing keys that have been revoked by a revocation
# key that is not present on the keyring
keyserver-options auto-key-retrieve

# When searching, include keys marked as "revoked" on the keyserver
keyserver-options include-revoked

# If the key in question has a preferred keyserver URL, then use that preferred
# keyserver to refresh the key from
keyserver-options honor-keyserver-url

# If auto-key-retrieve is set, and the signature being verified has a PKA
# record, then use the PKA information to fetch the key
keyserver-options honor-pka-record

# Tell the keyserver helper program how long (in seconds) to try and perform
# a keyserver action before giving up
keyserver-options timeout=10

#-----------------------------
# algorithm and ciphers
#-----------------------------

# list of personal digest preferences. When multiple digests are supported by
# all recipients, choose the strongest one
personal-cipher-preferences AES256 CAMELLIA256 AES192 CAMELLIA192

# list of personal digest preferences. When multiple ciphers are supported by
# all recipients, choose the strongest one
personal-digest-preferences SHA512 SHA384 SHA256 SHA224

# message digest algorithm used when signing a key
cert-digest-algo SHA512

personal-compress-preferences ZLIB BZIP2 Uncompressed

# This preference list is used for new keys and becomes the default for
# "setpref" in the edit menu
default-preference-list AES256 CAMELLIA256 AES192 CAMELLIA192 AES CAMELLIA128 TWOFISH SHA512 SHA384 SHA256 SHA224 BZIP2 ZLIB ZIP Uncompressed

photo-viewer feh --quiet --borderless --title 'GnupG KeyID 0x%K' -
